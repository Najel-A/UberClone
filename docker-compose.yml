services:
  admin-service:
    build:
      context: ./backend/admin-service
    container_name: admin-service
    env_file:
      - ./backend/admin-service/.env.docker
    ports:
      - "${ADMIN_SERVICE_PORT}:${ADMIN_SERVICE_PORT}"

  billing-service:
    build:
      context: ./backend/billing-service
    container_name: billing-service
    env_file:
      - ./backend/billing-service/.env.docker
    ports:
      - "${BILLING_SERVICE_PORT}:${BILLING_SERVICE_PORT}"
    depends_on:
      - mysql
  
  customer-service:
    build:
      context: ./backend/customer-service
    container_name: customer-service
    env_file:
      - ./backend/customer-service/.env.docker
    ports:
      - "${CUSTOMER_SERVICE_PORT}:${CUSTOMER_SERVICE_PORT}"
  
  driver-service:
    build:
      context: ./backend/driver-service
    container_name: driver-service
    env_file:
      - ./backend/driver-service/.env.docker
    ports:
      - "${DRIVER_SERVICE_PORT}:${DRIVER_SERVICE_PORT}"
  
  ride-service:
    build:
      context: ./backend/ride-service
    container_name: ride-service
    env_file:
      - ./backend/ride-service/.env.docker
    ports:
      - "${RIDE_SERVICE_PORT}:${RIDE_SERVICE_PORT}"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379

  ml-price-predict:
    build:
      context: ./backend/ml-price-predict
    container_name: ml-price-predict
    ports:
      - "8000:8000"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"    
      - "29092:29092"    
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      # Advertise correct addresses for inside (kafka) vs outside (localhost)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${KAFKA_HOST}:29092

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  mongodb:
    image: mongo:8
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mysql:
    image: mysql:9
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql

volumes:
  kafka-data:
  redis-data:
  mongo-data:
  mysql-data:


  

  